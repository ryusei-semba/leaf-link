# コミットメッセージ規約

### 1. 基本構造

<type>(<scope>): <subject>

<body>

<footer>

### 2. 各要素の説明

#### Type
- feat: 新機能
- fix: バグ修正
- docs: ドキュメントのみの変更
- style: コードの意味に影響を与えない変更（空白、フォーマット、セミコロンの追加など）
- refactor: バグ修正や機能追加のないコードの変更
- test: テストの追加・修正
- chore: ビルドプロセスやドキュメント生成などの補助ツールやライブラリの変更

#### Scope
- 変更の範囲を示す（オプション）
- 例: (api), (web), (db), (auth)など

#### Subject
- 変更内容を簡潔に説明
- 命令形で記述
- 最初は小文字
- 末尾にピリオドを付けない

#### Body
- 変更の詳細な説明（オプション）
- なぜその変更が必要だったのかの説明
- 複数行可

#### Footer
- Breaking changesの説明
- 関連するIssueやPRへの参照（オプション）

### 3. コミットメッセージの例

```
feat(web): ダークモード切り替え機能を追加

- next-themesを使用したテーマ切り替え機能を実装
- ヘッダーにテーマ切り替えボタンを追加
- カラーテーマの変数を定義

Closes #123
```

# プロンプト履歴
<prompt_history>

### 2024-01-28
1. OpenAPI仕様書の作成とRedocによるドキュメント生成
   - OpenAPI 3.0形式でAPI仕様を記述
   - Redoclyを使用してHTML形式のドキュメントを生成

2. ダークモード対応の実装
   - next-themesを使用したテーマ切り替え機能の追加
   - カスタムカラー変数の定義
   - ヘッダーへのテーマ切り替えボタンの配置

--- 途中省略 ---

#### Prompt History
- ユーザーが指示したプロンプトの履歴を記載
- プロンプトに関連する追加のコンテキスト情報も含める
``` 